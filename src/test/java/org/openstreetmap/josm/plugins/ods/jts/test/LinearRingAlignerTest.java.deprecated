package org.openstreetmap.josm.plugins.ods.jts.test;

import org.junit.Test;
import org.openstreetmap.josm.plugins.ods.jts.GeoUtil;
import org.openstreetmap.josm.plugins.ods.jts.LinearRingAligner1;

import com.vividsolutions.jts.geom.LinearRing;
import com.vividsolutions.jts.io.ParseException;

public class LinearRingAlignerTest  {
    
    //@Test
    public void testFix1() throws ParseException {
        // Test 2 buildings in Utrecht
        LinearRing ring1 = createLinearRing("LINEARRING (5.122603307428826 52.07947509246981, 5.1226077332760465 52.07948152888103, 5.122631295056017 52.079518154261386, 5.122483506093581 52.07955246256768, 5.122471318893761 52.07953379392178, 5.122377249173183 52.07955712243126, 5.122362011608539 52.07953378210788, 5.122456326939868 52.07951084963766, 5.122603307428826 52.07947509246981)");
        LinearRing ring2 = createLinearRing("LINEARRING (5.1221287448168145 52.07951013151931, 5.1222648854017345 52.07947460206607, 5.122522628524404 52.07940733897208, 5.122550612963508 52.07939911478602, 5.122552843151158 52.079401879133364, 5.1225520830498 52.07940213808137, 5.122552589101336 52.0794029032043, 5.122553582286895 52.07940269870797, 5.1225604384969134 52.07941258301187, 5.122570109952588 52.079415103408316, 5.12258026256261 52.079430001471565, 5.122576289498421 52.07943580784188, 5.122584404645537 52.07944742068171, 5.122593886682453 52.07944990469866, 5.122604258123975 52.079464803250914, 5.122600212333784 52.07947057350644, 5.122603307428826 52.07947509246981, 5.122456326939868 52.07951084963766, 5.122349068045402 52.07953693481059, 5.122185535228098 52.07957670807821, 5.1221287448168145 52.07951013151931)");
        testFix(ring1, ring2);
    }

    //@Test
    public void testFix2() throws ParseException {
        // Test 2 buildings in Deventer that have a risk of creating self-intersecting rings
        LinearRing ring1 = createLinearRing("LINEARRING (6.1569983 52.2535315, 6.1569518 52.2535608, 6.1570188 52.2535914, 6.1570648 52.2536216, 6.1570303 52.2536438, 6.1570372 52.2536479, 6.157028 52.2536539, 6.1570616 52.2536744, 6.1570554 52.253679, 6.1571149 52.2537133, 6.1571561 52.2536894, 6.157189 52.2537091, 6.1571543 52.25373, 6.1571636 52.253736, 6.1571993 52.2537153, 6.1572431 52.2537449, 6.1572814 52.2537227, 6.1572812 52.2537226, 6.1572863 52.2537199, 6.1572979 52.2537119, 6.1573566 52.2536785, 6.1572899 52.2536366, 6.1572961 52.2536328, 6.1572115 52.2535774, 6.1572174 52.2535731, 6.1571716 52.2535499, 6.1571619 52.2535562, 6.1571556 52.253553, 6.1571517 52.2535548, 6.1571453 52.2535514, 6.1571436 52.2535527, 6.1571302 52.2535622, 6.1571389 52.2535669, 6.1570976 52.2535954, 6.1570675 52.2535798, 6.1570755 52.2535739, 6.1569983 52.2535315)");
        LinearRing ring2 = createLinearRing("LINEARRING (6.1574223 52.2536411, 6.1572979 52.2537119, 6.1572863 52.2537199, 6.1572812 52.2537226, 6.1572814 52.2537227, 6.1572431 52.2537449, 6.1572761 52.2537672, 6.1572736 52.2537689, 6.1573097 52.2537925, 6.1575018 52.2536887, 6.1574223 52.2536411)");
        testFix(ring1, ring2);
    }
    
    @Test
    public void testFix3() throws ParseException {
        // Test 2 buildings in Utrecht
        LinearRing ring1 = createLinearRing("LINEARRING (5.1217904 52.0796757, 5.1218332 52.079714, 5.1219536 52.0796625, 5.1219109 52.0796241, 5.1217904 52.0796757)");
        LinearRing ring2 = createLinearRing("LINEARRING (5.1218332 52.079714, 5.1218759 52.0797523, 5.1219963 52.0797008, 5.1219536 52.0796625, 5.1218332 52.079714)");
        testFix(ring1, ring2);
    }
    
    private void testFix(LinearRing ring1, LinearRing ring2) throws ParseException {
        LinearRingAligner1 aligner = new LinearRingAligner1(ring1, ring2, 2e-7);
        aligner.run();
    }
    
    private LinearRing createLinearRing(String wkt) throws ParseException {
        return (LinearRing) GeoUtil.OSM_WKT_READER.read(wkt);
    }
}
